/*
You have a tree, convert it to ternery.
     a
    Ôºè\
    b  c
   / \
  d   e

  (a? b:c) ? d : e
  a?b?c:d?e:f
 */
class Solution{
    static class TreeNode{
        char val;
        TreeNode root;
        TreeNode left;
        TreeNode right;
        TreeNode(char x) { val = x; }
    }

    public static String BSTtoTer(TreeNode root){
        StringBuilder sb = new StringBuilder();
        if(root == null) return "";
        sb.append(root.val);
        sb.append('?');
        sb.append(root.left.val);
        sb.append(':');
        sb.append(root.right.val);
        BSTtoTer(root.left);
        BSTtoTer(root.right);
        sb.toString();

    }


    public static void main(String[] args){
        TreeNode a = new TreeNode('a');
        TreeNode b = new TreeNode('b');
        TreeNode c = new TreeNode('c');
        TreeNode d = new TreeNode('d');
        TreeNode e = new TreeNode('e');
        TreeNode f = new TreeNode('f');
        TreeNode g = new TreeNode('g');
        a.left = b;
        a.right = c;
        b.left = d;
        b.right = e;
        System.out.print("Result"+BSTtoTer(a));
    }
}