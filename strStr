class Solution{
    public int strStr(String haystack, String needle){
        int l1 = haystack.length, l2 = needle.length;
        if(l2 > l1) return -1;
        if(l2 == 0) return 0;
        int diff = l1-l2;
        for(int i=0; i<=diff; i++){
            if(haystack.substring(i, i+l2).equals(needle)){
                return i;
            }
        }
        return -1;
    }


    //method 2
    public int strStr(String haystack, String needle) {
        for (int i = 0; ; i++) {
            for (int j = 0; ; j++) {
                if (j == needle.length()) return i;
                if (i + j == haystack.length()) return -1;
                if (needle.charAt(j) != haystack.charAt(i + j)) break;
            }
        }
    }

    // main
    public static void main(String args[])
    {
        String s1 = "for";
        String s2 = "geeksforgeeks";

        int res = isSubstring(s1, s2);

        if (res == -1)
            System.out.println("Not present");
        else
            System.out.println("Present at index "
                    + res);
    }
}